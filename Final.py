{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Final.py",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Ek-hOBMTeor7"
      },
      "outputs": [],
      "source": [
        "import sqlite3 \n",
        "import pandas as pd \n",
        "from sqlite3.dbapi2 import DatabaseError\n",
        "from PIL import Image\n",
        "\n",
        "#colnames={c:c for c in list(df)}\n",
        "database = 'CreateDB.db'\n",
        "selects= {\n",
        "'country':\n",
        "'''SELECT Acronym FROM countries WHERE Country = \"{}\" ''',\n",
        "\n",
        "'grants':\n",
        "'''SELECT SUM (o.ecContribution) AS grants\n",
        "  FROM organizations o JOIN projects p ON o.projectID==p.projectID\n",
        "  WHERE o.country = '{}'\n",
        "  GROUP BY p.year''',\n",
        "\n",
        "'participants':\n",
        "'''SELECT shortName, name, activityType, organizationURL, COUNT(ecContribution) n_projects, SUM(ecContribution)   #maybe this is incomplete\n",
        "  FROM organizations\n",
        "  WHERE country = '{}'\n",
        "  GROUP BY name ORDER BY SUM(ecContribution) DESC''',\n",
        "\n",
        "'coordinators':\n",
        "'''SELECT o.shortName, o.name, p.acronym, p.keywords\n",
        "  FROM organizations o JOIN projects p ON o.projectID = p.projectID\n",
        "  WHERE o.country='{}' AND o.role = 'coordinator' '''\n",
        "}\n",
        "\n",
        "#Title\n",
        "image=Image.open('descarga.png')\n",
        "st.image()\n",
        "st.title('Partner search tool')\n",
        "\n",
        "#Select country\n",
        "conn=sqlite3.connect(database)\n",
        "ct= st.selectbox('Select country', ['Spain', 'France', 'Germany'])\n",
        "country=pd.read_sql(selects['country'].format(ct), conn)\n",
        "country=country.Acronym.item()\n",
        "st.write(f'You selected: {country}-{ct}')\n",
        "\n",
        "#Other selects\n",
        "dfs={}\n",
        "for key,sel in selects.items():\n",
        "  dfs[key]=pd.read_sql(sel.format(country), conn)\n",
        "\n",
        "df_grants_year = pd.read_sql('''SELECT p.year, SUM(o.ecContribution) AS grants\n",
        "    FROM organizations o JOIN projects p ON o.projectID==p.projectID\n",
        "    WHERE o.country='{}'\n",
        "    GROUP BY p.year '''.format(country), conn)\n",
        "conn.close()\n",
        "\n",
        "#grants\n",
        "st.subheader(f'Yearly EC contribution in {ct} (â‚¬)')\n",
        "st.bar_chart(dfs['grants'])\n",
        "\n",
        "#participants\n",
        "st.subheader(f'Participants in {ct}')\n",
        "st.dataframe(dfs['participants'])\n",
        "csv_p=dfs['participants'].to_csv().encode('utf-8')\n",
        "st.download_button(\n",
        "    label= 'Download participants data as CSV',\n",
        "    data=csv_p,\n",
        "    file_name=f'{country}_participants.csv',\n",
        "    mime='text/csv',\n",
        ")\n",
        "\n",
        "#coordinators\n",
        "st.subheader(f'Project coordinators in {ct}')\n",
        "st.dataframe(dfs['coordinators'])\n",
        "csv_c=dfs['coordinators'].to_csv().encode('utf-8')"
      ]
    }
  ]
}